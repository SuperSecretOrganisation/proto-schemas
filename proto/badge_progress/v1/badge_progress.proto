syntax = "proto3";

package proto.badge_progress.v1;

option go_package = "github.com/supersecretorganisation/proto-schemas/v2/gen/go/proto/badge_progress/v1;badgeprogresspb";

import "proto/badge/v1/badge.proto";

service BadgeProgressService {
  rpc GetUserBadgeProgress (GetUserBadgeProgressRequest) returns (GetUserBadgeProgressResponse);
  rpc UpdateProgress (UpdateProgressRequest) returns (UpdateProgressResponse);
  rpc GetProgressForBadge (GetProgressForBadgeRequest) returns (GetProgressForBadgeResponse);
}

// BadgeProgress message definition
message BadgeProgress {
  int64 id = 1;
  int32 user_id = 2;
  int32 badge_id = 3;
  int32 current_progress = 4;
  int32 target_progress = 5;
  string last_updated = 6;
  double progress_percentage = 7;
  badge.v1.Badge badge = 8; // Preloaded badge information
}

// Get user badge progress request and response
message GetUserBadgeProgressRequest {
  int32 user_id = 1;
}
message GetUserBadgeProgressResponse {
  repeated BadgeProgress progress_list = 1;
}

// Update progress request and response
message UpdateProgressRequest {
  int32 user_id = 1;
  int32 badge_id = 2;
  int32 current_progress = 3;
}
message UpdateProgressResponse {
  BadgeProgress progress = 1;
  bool badge_completed = 2;
}

// Get progress for specific badge request and response
message GetProgressForBadgeRequest {
  int32 user_id = 1;
  int32 badge_id = 2;
}
message GetProgressForBadgeResponse {
  BadgeProgress progress = 1;
}
