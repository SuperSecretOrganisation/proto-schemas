syntax = "proto3";

package proto.badge.v1;

option go_package = "github.com/supersecretorganisation/proto-schemas/v2/gen/go/proto/badge/v1;badgepb";

service BadgeService {
  rpc GetBadge (GetBadgeRequest) returns (GetBadgeResponse);
  rpc ListBadges (ListBadgesRequest) returns (ListBadgesResponse);
  rpc GetBadgesByCategory (GetBadgesByCategoryRequest) returns (GetBadgesByCategoryResponse);
  rpc GetBadgesByLevel (GetBadgesByLevelRequest) returns (GetBadgesByLevelResponse);
  rpc CreateBadge (CreateBadgeRequest) returns (CreateBadgeResponse);
  rpc UpdateBadge (UpdateBadgeRequest) returns (UpdateBadgeResponse);
  rpc DeleteBadge (DeleteBadgeRequest) returns (DeleteBadgeResponse);
}

// Badge message definition
message Badge {
  int32 id = 1;
  string badge_key = 2;
  string name = 3;
  string description = 4;
  string category = 5; // milestone, achievement, seasonal, rare, social
  int32 level = 6; // 1=bronze, 2=silver, 3=gold, 4=platinum
  string icon_url = 7;
  string requirement_type = 8; // workout_count, streak_days, distance, etc.
  int32 requirement_value = 9;
  int32 points = 10;
  bool is_active = 11;
  string created_at = 12;
  string updated_at = 13;
}

// Get badge request and response
message GetBadgeRequest {
  int32 id = 1;
}
message GetBadgeResponse {
  Badge badge = 1;
}

// List badges request and response
message ListBadgesRequest {
  int32 page = 1;
  int32 page_size = 2;
}
message ListBadgesResponse {
  repeated Badge badges = 1;
  int32 total_count = 2;
}

// Get badges by category request and response
message GetBadgesByCategoryRequest {
  string category = 1;
}
message GetBadgesByCategoryResponse {
  repeated Badge badges = 1;
}

// Get badges by level request and response
message GetBadgesByLevelRequest {
  int32 level = 1;
}
message GetBadgesByLevelResponse {
  repeated Badge badges = 1;
}

// Create badge request and response
message CreateBadgeRequest {
  string badge_key = 1;
  string name = 2;
  string description = 3;
  string category = 4;
  int32 level = 5;
  string icon_url = 6;
  string requirement_type = 7;
  int32 requirement_value = 8;
  int32 points = 9;
}
message CreateBadgeResponse {
  Badge badge = 1;
}

// Update badge request and response
message UpdateBadgeRequest {
  int32 id = 1;
  string name = 2;
  string description = 3;
  string icon_url = 4;
  int32 points = 5;
  bool is_active = 6;
}
message UpdateBadgeResponse {
  Badge badge = 1;
}

// Delete badge request and response
message DeleteBadgeRequest {
  int32 id = 1;
}
message DeleteBadgeResponse {
  bool success = 1;
}
