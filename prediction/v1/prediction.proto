syntax="proto3";

package prediction.v1;

option go_package = "generated/prediction;predictionpb";

import "google/protobuf/timestamp.proto";

service PredictionService {
    rpc CreatePrediction (CreatePredictionRequest) returns (CreatePredictionResponse);
    rpc GetPrediction (GetPredictionRequest) returns (GetPredictionResponse);
    rpc UpdatePrediction (UpdatePredictionRequest) returns (UpdatePredictionResponse);
    rpc DeletePrediction (DeletePredictionRequest) returns (DeletePredictionResponse);
    rpc ListPredictions (ListPredictionsRequest) returns (ListPredictionsResponse);
}

message Prediction {
    string uuid = 1;     
    string user_uuid = 2;
    int32 prediction = 3;
    int32 error_range = 4;
    google.protobuf.Timestamp timestamp = 5;
   
}

message CreatePredictionRequest {
    string user_uuid = 1;
    int32 prediction = 2;
    int32 error_range = 3;
    google.protobuf.Timestamp timestamp = 4; // Optional, defaults to current time if not provided
}

message CreatePredictionResponse {
    string uuid = 1;
    string user_uuid = 2;
    int32 prediction = 3;
    int32 error_range = 4;
    google.protobuf.Timestamp timestamp = 5; // Timestamp of creation
}

message GetPredictionRequest {
    string uuid = 1;
}

message GetPredictionResponse {
    string uuid = 1;
    string user_uuid = 2;
    int32 prediction = 3;
    int32 error_range = 4;
    google.protobuf.Timestamp timestamp = 5; // Timestamp of the prediction
}

message UpdatePredictionRequest {
    string uuid = 1;
    string user_uuid = 2;
    int32 prediction = 3;
    int32 error_range = 4;
    google.protobuf.Timestamp timestamp = 5; // Optional, defaults to current time if not provided
}

message UpdatePredictionResponse {
    string uuid = 1;
    string user_uuid = 2;
    int32 prediction = 3;
    int32 error_range = 4;
    google.protobuf.Timestamp timestamp = 5; // Timestamp of the update
}

message DeletePredictionRequest {
    string uuid = 1;
}

message DeletePredictionResponse {
    string uuid = 1;
}

message ListPredictionsRequest {
    int32 page = 1;
    int32 page_size = 2;
}

message ListPredictionsResponse {
    repeated Prediction predictions = 1;
    int32 total_count = 2; // Total number of predictions available
}
