// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/badge_progress/v1/badge_progress.proto

package badgeprogresspb

import (
	v1 "github.com/supersecretorganisation/proto-schemas/v2/gen/go/proto/badge/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BadgeProgress message definition
type BadgeProgress struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId             int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BadgeId            int32                  `protobuf:"varint,3,opt,name=badge_id,json=badgeId,proto3" json:"badge_id,omitempty"`
	CurrentProgress    int32                  `protobuf:"varint,4,opt,name=current_progress,json=currentProgress,proto3" json:"current_progress,omitempty"`
	TargetProgress     int32                  `protobuf:"varint,5,opt,name=target_progress,json=targetProgress,proto3" json:"target_progress,omitempty"`
	LastUpdated        string                 `protobuf:"bytes,6,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	ProgressPercentage float64                `protobuf:"fixed64,7,opt,name=progress_percentage,json=progressPercentage,proto3" json:"progress_percentage,omitempty"`
	Badge              *v1.Badge              `protobuf:"bytes,8,opt,name=badge,proto3" json:"badge,omitempty"` // Preloaded badge information
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BadgeProgress) Reset() {
	*x = BadgeProgress{}
	mi := &file_proto_badge_progress_v1_badge_progress_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BadgeProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadgeProgress) ProtoMessage() {}

func (x *BadgeProgress) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_progress_v1_badge_progress_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BadgeProgress.ProtoReflect.Descriptor instead.
func (*BadgeProgress) Descriptor() ([]byte, []int) {
	return file_proto_badge_progress_v1_badge_progress_proto_rawDescGZIP(), []int{0}
}

func (x *BadgeProgress) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BadgeProgress) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BadgeProgress) GetBadgeId() int32 {
	if x != nil {
		return x.BadgeId
	}
	return 0
}

func (x *BadgeProgress) GetCurrentProgress() int32 {
	if x != nil {
		return x.CurrentProgress
	}
	return 0
}

func (x *BadgeProgress) GetTargetProgress() int32 {
	if x != nil {
		return x.TargetProgress
	}
	return 0
}

func (x *BadgeProgress) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

func (x *BadgeProgress) GetProgressPercentage() float64 {
	if x != nil {
		return x.ProgressPercentage
	}
	return 0
}

func (x *BadgeProgress) GetBadge() *v1.Badge {
	if x != nil {
		return x.Badge
	}
	return nil
}

// Get user badge progress request and response
type GetUserBadgeProgressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBadgeProgressRequest) Reset() {
	*x = GetUserBadgeProgressRequest{}
	mi := &file_proto_badge_progress_v1_badge_progress_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBadgeProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBadgeProgressRequest) ProtoMessage() {}

func (x *GetUserBadgeProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_progress_v1_badge_progress_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBadgeProgressRequest.ProtoReflect.Descriptor instead.
func (*GetUserBadgeProgressRequest) Descriptor() ([]byte, []int) {
	return file_proto_badge_progress_v1_badge_progress_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserBadgeProgressRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserBadgeProgressResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProgressList  []*BadgeProgress       `protobuf:"bytes,1,rep,name=progress_list,json=progressList,proto3" json:"progress_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBadgeProgressResponse) Reset() {
	*x = GetUserBadgeProgressResponse{}
	mi := &file_proto_badge_progress_v1_badge_progress_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBadgeProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBadgeProgressResponse) ProtoMessage() {}

func (x *GetUserBadgeProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_progress_v1_badge_progress_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBadgeProgressResponse.ProtoReflect.Descriptor instead.
func (*GetUserBadgeProgressResponse) Descriptor() ([]byte, []int) {
	return file_proto_badge_progress_v1_badge_progress_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserBadgeProgressResponse) GetProgressList() []*BadgeProgress {
	if x != nil {
		return x.ProgressList
	}
	return nil
}

// Update progress request and response
type UpdateProgressRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserId          int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BadgeId         int32                  `protobuf:"varint,2,opt,name=badge_id,json=badgeId,proto3" json:"badge_id,omitempty"`
	CurrentProgress int32                  `protobuf:"varint,3,opt,name=current_progress,json=currentProgress,proto3" json:"current_progress,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateProgressRequest) Reset() {
	*x = UpdateProgressRequest{}
	mi := &file_proto_badge_progress_v1_badge_progress_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProgressRequest) ProtoMessage() {}

func (x *UpdateProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_progress_v1_badge_progress_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProgressRequest.ProtoReflect.Descriptor instead.
func (*UpdateProgressRequest) Descriptor() ([]byte, []int) {
	return file_proto_badge_progress_v1_badge_progress_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateProgressRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateProgressRequest) GetBadgeId() int32 {
	if x != nil {
		return x.BadgeId
	}
	return 0
}

func (x *UpdateProgressRequest) GetCurrentProgress() int32 {
	if x != nil {
		return x.CurrentProgress
	}
	return 0
}

type UpdateProgressResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Progress       *BadgeProgress         `protobuf:"bytes,1,opt,name=progress,proto3" json:"progress,omitempty"`
	BadgeCompleted bool                   `protobuf:"varint,2,opt,name=badge_completed,json=badgeCompleted,proto3" json:"badge_completed,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateProgressResponse) Reset() {
	*x = UpdateProgressResponse{}
	mi := &file_proto_badge_progress_v1_badge_progress_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProgressResponse) ProtoMessage() {}

func (x *UpdateProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_progress_v1_badge_progress_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProgressResponse.ProtoReflect.Descriptor instead.
func (*UpdateProgressResponse) Descriptor() ([]byte, []int) {
	return file_proto_badge_progress_v1_badge_progress_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateProgressResponse) GetProgress() *BadgeProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *UpdateProgressResponse) GetBadgeCompleted() bool {
	if x != nil {
		return x.BadgeCompleted
	}
	return false
}

// Get progress for specific badge request and response
type GetProgressForBadgeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BadgeId       int32                  `protobuf:"varint,2,opt,name=badge_id,json=badgeId,proto3" json:"badge_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProgressForBadgeRequest) Reset() {
	*x = GetProgressForBadgeRequest{}
	mi := &file_proto_badge_progress_v1_badge_progress_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProgressForBadgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProgressForBadgeRequest) ProtoMessage() {}

func (x *GetProgressForBadgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_progress_v1_badge_progress_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProgressForBadgeRequest.ProtoReflect.Descriptor instead.
func (*GetProgressForBadgeRequest) Descriptor() ([]byte, []int) {
	return file_proto_badge_progress_v1_badge_progress_proto_rawDescGZIP(), []int{5}
}

func (x *GetProgressForBadgeRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetProgressForBadgeRequest) GetBadgeId() int32 {
	if x != nil {
		return x.BadgeId
	}
	return 0
}

type GetProgressForBadgeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Progress      *BadgeProgress         `protobuf:"bytes,1,opt,name=progress,proto3" json:"progress,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProgressForBadgeResponse) Reset() {
	*x = GetProgressForBadgeResponse{}
	mi := &file_proto_badge_progress_v1_badge_progress_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProgressForBadgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProgressForBadgeResponse) ProtoMessage() {}

func (x *GetProgressForBadgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_progress_v1_badge_progress_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProgressForBadgeResponse.ProtoReflect.Descriptor instead.
func (*GetProgressForBadgeResponse) Descriptor() ([]byte, []int) {
	return file_proto_badge_progress_v1_badge_progress_proto_rawDescGZIP(), []int{6}
}

func (x *GetProgressForBadgeResponse) GetProgress() *BadgeProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

var File_proto_badge_progress_v1_badge_progress_proto protoreflect.FileDescriptor

const file_proto_badge_progress_v1_badge_progress_proto_rawDesc = "" +
	"\n" +
	",proto/badge_progress/v1/badge_progress.proto\x12\x17proto.badge_progress.v1\x1a\x1aproto/badge/v1/badge.proto\"\xa8\x02\n" +
	"\rBadgeProgress\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x05R\x06userId\x12\x19\n" +
	"\bbadge_id\x18\x03 \x01(\x05R\abadgeId\x12)\n" +
	"\x10current_progress\x18\x04 \x01(\x05R\x0fcurrentProgress\x12'\n" +
	"\x0ftarget_progress\x18\x05 \x01(\x05R\x0etargetProgress\x12!\n" +
	"\flast_updated\x18\x06 \x01(\tR\vlastUpdated\x12/\n" +
	"\x13progress_percentage\x18\a \x01(\x01R\x12progressPercentage\x12+\n" +
	"\x05badge\x18\b \x01(\v2\x15.proto.badge.v1.BadgeR\x05badge\"6\n" +
	"\x1bGetUserBadgeProgressRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\"k\n" +
	"\x1cGetUserBadgeProgressResponse\x12K\n" +
	"\rprogress_list\x18\x01 \x03(\v2&.proto.badge_progress.v1.BadgeProgressR\fprogressList\"v\n" +
	"\x15UpdateProgressRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\x12\x19\n" +
	"\bbadge_id\x18\x02 \x01(\x05R\abadgeId\x12)\n" +
	"\x10current_progress\x18\x03 \x01(\x05R\x0fcurrentProgress\"\x85\x01\n" +
	"\x16UpdateProgressResponse\x12B\n" +
	"\bprogress\x18\x01 \x01(\v2&.proto.badge_progress.v1.BadgeProgressR\bprogress\x12'\n" +
	"\x0fbadge_completed\x18\x02 \x01(\bR\x0ebadgeCompleted\"P\n" +
	"\x1aGetProgressForBadgeRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\x12\x19\n" +
	"\bbadge_id\x18\x02 \x01(\x05R\abadgeId\"a\n" +
	"\x1bGetProgressForBadgeResponse\x12B\n" +
	"\bprogress\x18\x01 \x01(\v2&.proto.badge_progress.v1.BadgeProgressR\bprogress2\x92\x03\n" +
	"\x14BadgeProgressService\x12\x83\x01\n" +
	"\x14GetUserBadgeProgress\x124.proto.badge_progress.v1.GetUserBadgeProgressRequest\x1a5.proto.badge_progress.v1.GetUserBadgeProgressResponse\x12q\n" +
	"\x0eUpdateProgress\x12..proto.badge_progress.v1.UpdateProgressRequest\x1a/.proto.badge_progress.v1.UpdateProgressResponse\x12\x80\x01\n" +
	"\x13GetProgressForBadge\x123.proto.badge_progress.v1.GetProgressForBadgeRequest\x1a4.proto.badge_progress.v1.GetProgressForBadgeResponseBdZbgithub.com/supersecretorganisation/proto-schemas/v2/gen/go/proto/badge_progress/v1;badgeprogresspbb\x06proto3"

var (
	file_proto_badge_progress_v1_badge_progress_proto_rawDescOnce sync.Once
	file_proto_badge_progress_v1_badge_progress_proto_rawDescData []byte
)

func file_proto_badge_progress_v1_badge_progress_proto_rawDescGZIP() []byte {
	file_proto_badge_progress_v1_badge_progress_proto_rawDescOnce.Do(func() {
		file_proto_badge_progress_v1_badge_progress_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_badge_progress_v1_badge_progress_proto_rawDesc), len(file_proto_badge_progress_v1_badge_progress_proto_rawDesc)))
	})
	return file_proto_badge_progress_v1_badge_progress_proto_rawDescData
}

var file_proto_badge_progress_v1_badge_progress_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_badge_progress_v1_badge_progress_proto_goTypes = []any{
	(*BadgeProgress)(nil),                // 0: proto.badge_progress.v1.BadgeProgress
	(*GetUserBadgeProgressRequest)(nil),  // 1: proto.badge_progress.v1.GetUserBadgeProgressRequest
	(*GetUserBadgeProgressResponse)(nil), // 2: proto.badge_progress.v1.GetUserBadgeProgressResponse
	(*UpdateProgressRequest)(nil),        // 3: proto.badge_progress.v1.UpdateProgressRequest
	(*UpdateProgressResponse)(nil),       // 4: proto.badge_progress.v1.UpdateProgressResponse
	(*GetProgressForBadgeRequest)(nil),   // 5: proto.badge_progress.v1.GetProgressForBadgeRequest
	(*GetProgressForBadgeResponse)(nil),  // 6: proto.badge_progress.v1.GetProgressForBadgeResponse
	(*v1.Badge)(nil),                     // 7: proto.badge.v1.Badge
}
var file_proto_badge_progress_v1_badge_progress_proto_depIdxs = []int32{
	7, // 0: proto.badge_progress.v1.BadgeProgress.badge:type_name -> proto.badge.v1.Badge
	0, // 1: proto.badge_progress.v1.GetUserBadgeProgressResponse.progress_list:type_name -> proto.badge_progress.v1.BadgeProgress
	0, // 2: proto.badge_progress.v1.UpdateProgressResponse.progress:type_name -> proto.badge_progress.v1.BadgeProgress
	0, // 3: proto.badge_progress.v1.GetProgressForBadgeResponse.progress:type_name -> proto.badge_progress.v1.BadgeProgress
	1, // 4: proto.badge_progress.v1.BadgeProgressService.GetUserBadgeProgress:input_type -> proto.badge_progress.v1.GetUserBadgeProgressRequest
	3, // 5: proto.badge_progress.v1.BadgeProgressService.UpdateProgress:input_type -> proto.badge_progress.v1.UpdateProgressRequest
	5, // 6: proto.badge_progress.v1.BadgeProgressService.GetProgressForBadge:input_type -> proto.badge_progress.v1.GetProgressForBadgeRequest
	2, // 7: proto.badge_progress.v1.BadgeProgressService.GetUserBadgeProgress:output_type -> proto.badge_progress.v1.GetUserBadgeProgressResponse
	4, // 8: proto.badge_progress.v1.BadgeProgressService.UpdateProgress:output_type -> proto.badge_progress.v1.UpdateProgressResponse
	6, // 9: proto.badge_progress.v1.BadgeProgressService.GetProgressForBadge:output_type -> proto.badge_progress.v1.GetProgressForBadgeResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_badge_progress_v1_badge_progress_proto_init() }
func file_proto_badge_progress_v1_badge_progress_proto_init() {
	if File_proto_badge_progress_v1_badge_progress_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_badge_progress_v1_badge_progress_proto_rawDesc), len(file_proto_badge_progress_v1_badge_progress_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_badge_progress_v1_badge_progress_proto_goTypes,
		DependencyIndexes: file_proto_badge_progress_v1_badge_progress_proto_depIdxs,
		MessageInfos:      file_proto_badge_progress_v1_badge_progress_proto_msgTypes,
	}.Build()
	File_proto_badge_progress_v1_badge_progress_proto = out.File
	file_proto_badge_progress_v1_badge_progress_proto_goTypes = nil
	file_proto_badge_progress_v1_badge_progress_proto_depIdxs = nil
}
