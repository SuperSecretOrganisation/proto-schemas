// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/dashboard/v1/dashboard.proto

package dashboardpb

import (
	v1 "github.com/supersecretorganisation/proto-schemas/v2/gen/go/proto/user_badge/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Complete dashboard data aggregation
type DashboardData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TodayActivity *DailyActivity         `protobuf:"bytes,1,opt,name=today_activity,json=todayActivity,proto3" json:"today_activity,omitempty"`
	WeeklySummary *WeeklySummary         `protobuf:"bytes,2,opt,name=weekly_summary,json=weeklySummary,proto3" json:"weekly_summary,omitempty"`
	StreakSummary *UserStreakSummary     `protobuf:"bytes,3,opt,name=streak_summary,json=streakSummary,proto3" json:"streak_summary,omitempty"`
	LevelInfo     *UserLevelInfo         `protobuf:"bytes,4,opt,name=level_info,json=levelInfo,proto3" json:"level_info,omitempty"`
	RecentBadges  []*v1.UserBadge        `protobuf:"bytes,5,rep,name=recent_badges,json=recentBadges,proto3" json:"recent_badges,omitempty"`
	LastUpdated   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DashboardData) Reset() {
	*x = DashboardData{}
	mi := &file_proto_dashboard_v1_dashboard_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DashboardData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardData) ProtoMessage() {}

func (x *DashboardData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_v1_dashboard_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardData.ProtoReflect.Descriptor instead.
func (*DashboardData) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_v1_dashboard_proto_rawDescGZIP(), []int{0}
}

func (x *DashboardData) GetTodayActivity() *DailyActivity {
	if x != nil {
		return x.TodayActivity
	}
	return nil
}

func (x *DashboardData) GetWeeklySummary() *WeeklySummary {
	if x != nil {
		return x.WeeklySummary
	}
	return nil
}

func (x *DashboardData) GetStreakSummary() *UserStreakSummary {
	if x != nil {
		return x.StreakSummary
	}
	return nil
}

func (x *DashboardData) GetLevelInfo() *UserLevelInfo {
	if x != nil {
		return x.LevelInfo
	}
	return nil
}

func (x *DashboardData) GetRecentBadges() []*v1.UserBadge {
	if x != nil {
		return x.RecentBadges
	}
	return nil
}

func (x *DashboardData) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

// Daily activity statistics
type DailyActivity struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Date                   string                 `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"` // ISO 8601 date (YYYY-MM-DD)
	Steps                  int32                  `protobuf:"varint,2,opt,name=steps,proto3" json:"steps,omitempty"`
	DistanceKm             float64                `protobuf:"fixed64,3,opt,name=distance_km,json=distanceKm,proto3" json:"distance_km,omitempty"`
	ActiveMinutes          int32                  `protobuf:"varint,4,opt,name=active_minutes,json=activeMinutes,proto3" json:"active_minutes,omitempty"`
	Calories               int32                  `protobuf:"varint,5,opt,name=calories,proto3" json:"calories,omitempty"`
	StepGoal               int32                  `protobuf:"varint,6,opt,name=step_goal,json=stepGoal,proto3" json:"step_goal,omitempty"`
	ActiveMinutesGoal      int32                  `protobuf:"varint,7,opt,name=active_minutes_goal,json=activeMinutesGoal,proto3" json:"active_minutes_goal,omitempty"`
	StepsProgress          float64                `protobuf:"fixed64,8,opt,name=steps_progress,json=stepsProgress,proto3" json:"steps_progress,omitempty"`                           // Percentage (0-100)
	ActiveMinutesProgress  float64                `protobuf:"fixed64,9,opt,name=active_minutes_progress,json=activeMinutesProgress,proto3" json:"active_minutes_progress,omitempty"` // Percentage (0-100)
	IsStepGoalMet          bool                   `protobuf:"varint,10,opt,name=is_step_goal_met,json=isStepGoalMet,proto3" json:"is_step_goal_met,omitempty"`
	IsActiveMinutesGoalMet bool                   `protobuf:"varint,11,opt,name=is_active_minutes_goal_met,json=isActiveMinutesGoalMet,proto3" json:"is_active_minutes_goal_met,omitempty"`
	IsAllGoalsMet          bool                   `protobuf:"varint,12,opt,name=is_all_goals_met,json=isAllGoalsMet,proto3" json:"is_all_goals_met,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DailyActivity) Reset() {
	*x = DailyActivity{}
	mi := &file_proto_dashboard_v1_dashboard_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DailyActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyActivity) ProtoMessage() {}

func (x *DailyActivity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_v1_dashboard_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyActivity.ProtoReflect.Descriptor instead.
func (*DailyActivity) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_v1_dashboard_proto_rawDescGZIP(), []int{1}
}

func (x *DailyActivity) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *DailyActivity) GetSteps() int32 {
	if x != nil {
		return x.Steps
	}
	return 0
}

func (x *DailyActivity) GetDistanceKm() float64 {
	if x != nil {
		return x.DistanceKm
	}
	return 0
}

func (x *DailyActivity) GetActiveMinutes() int32 {
	if x != nil {
		return x.ActiveMinutes
	}
	return 0
}

func (x *DailyActivity) GetCalories() int32 {
	if x != nil {
		return x.Calories
	}
	return 0
}

func (x *DailyActivity) GetStepGoal() int32 {
	if x != nil {
		return x.StepGoal
	}
	return 0
}

func (x *DailyActivity) GetActiveMinutesGoal() int32 {
	if x != nil {
		return x.ActiveMinutesGoal
	}
	return 0
}

func (x *DailyActivity) GetStepsProgress() float64 {
	if x != nil {
		return x.StepsProgress
	}
	return 0
}

func (x *DailyActivity) GetActiveMinutesProgress() float64 {
	if x != nil {
		return x.ActiveMinutesProgress
	}
	return 0
}

func (x *DailyActivity) GetIsStepGoalMet() bool {
	if x != nil {
		return x.IsStepGoalMet
	}
	return false
}

func (x *DailyActivity) GetIsActiveMinutesGoalMet() bool {
	if x != nil {
		return x.IsActiveMinutesGoalMet
	}
	return false
}

func (x *DailyActivity) GetIsAllGoalsMet() bool {
	if x != nil {
		return x.IsAllGoalsMet
	}
	return false
}

// Weekly activity summary
type WeeklySummary struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	WeekStart                  string                 `protobuf:"bytes,1,opt,name=week_start,json=weekStart,proto3" json:"week_start,omitempty"` // ISO 8601 date (YYYY-MM-DD)
	WeekEnd                    string                 `protobuf:"bytes,2,opt,name=week_end,json=weekEnd,proto3" json:"week_end,omitempty"`       // ISO 8601 date (YYYY-MM-DD)
	TotalSteps                 int32                  `protobuf:"varint,3,opt,name=total_steps,json=totalSteps,proto3" json:"total_steps,omitempty"`
	TotalDistanceKm            float64                `protobuf:"fixed64,4,opt,name=total_distance_km,json=totalDistanceKm,proto3" json:"total_distance_km,omitempty"`
	TotalActiveMinutes         int32                  `protobuf:"varint,5,opt,name=total_active_minutes,json=totalActiveMinutes,proto3" json:"total_active_minutes,omitempty"`
	TotalCalories              int32                  `protobuf:"varint,6,opt,name=total_calories,json=totalCalories,proto3" json:"total_calories,omitempty"`
	ActiveDays                 int32                  `protobuf:"varint,7,opt,name=active_days,json=activeDays,proto3" json:"active_days,omitempty"`
	GoalsDaysAchieved          int32                  `protobuf:"varint,8,opt,name=goals_days_achieved,json=goalsDaysAchieved,proto3" json:"goals_days_achieved,omitempty"`
	AverageStepsPerDay         int32                  `protobuf:"varint,9,opt,name=average_steps_per_day,json=averageStepsPerDay,proto3" json:"average_steps_per_day,omitempty"`
	AverageDistancePerDay      float64                `protobuf:"fixed64,10,opt,name=average_distance_per_day,json=averageDistancePerDay,proto3" json:"average_distance_per_day,omitempty"`
	AverageActiveMinutesPerDay int32                  `protobuf:"varint,11,opt,name=average_active_minutes_per_day,json=averageActiveMinutesPerDay,proto3" json:"average_active_minutes_per_day,omitempty"`
	WeeklyGoalCompletion       float64                `protobuf:"fixed64,12,opt,name=weekly_goal_completion,json=weeklyGoalCompletion,proto3" json:"weekly_goal_completion,omitempty"` // Percentage (0-100)
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *WeeklySummary) Reset() {
	*x = WeeklySummary{}
	mi := &file_proto_dashboard_v1_dashboard_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WeeklySummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeeklySummary) ProtoMessage() {}

func (x *WeeklySummary) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_v1_dashboard_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeeklySummary.ProtoReflect.Descriptor instead.
func (*WeeklySummary) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_v1_dashboard_proto_rawDescGZIP(), []int{2}
}

func (x *WeeklySummary) GetWeekStart() string {
	if x != nil {
		return x.WeekStart
	}
	return ""
}

func (x *WeeklySummary) GetWeekEnd() string {
	if x != nil {
		return x.WeekEnd
	}
	return ""
}

func (x *WeeklySummary) GetTotalSteps() int32 {
	if x != nil {
		return x.TotalSteps
	}
	return 0
}

func (x *WeeklySummary) GetTotalDistanceKm() float64 {
	if x != nil {
		return x.TotalDistanceKm
	}
	return 0
}

func (x *WeeklySummary) GetTotalActiveMinutes() int32 {
	if x != nil {
		return x.TotalActiveMinutes
	}
	return 0
}

func (x *WeeklySummary) GetTotalCalories() int32 {
	if x != nil {
		return x.TotalCalories
	}
	return 0
}

func (x *WeeklySummary) GetActiveDays() int32 {
	if x != nil {
		return x.ActiveDays
	}
	return 0
}

func (x *WeeklySummary) GetGoalsDaysAchieved() int32 {
	if x != nil {
		return x.GoalsDaysAchieved
	}
	return 0
}

func (x *WeeklySummary) GetAverageStepsPerDay() int32 {
	if x != nil {
		return x.AverageStepsPerDay
	}
	return 0
}

func (x *WeeklySummary) GetAverageDistancePerDay() float64 {
	if x != nil {
		return x.AverageDistancePerDay
	}
	return 0
}

func (x *WeeklySummary) GetAverageActiveMinutesPerDay() int32 {
	if x != nil {
		return x.AverageActiveMinutesPerDay
	}
	return 0
}

func (x *WeeklySummary) GetWeeklyGoalCompletion() float64 {
	if x != nil {
		return x.WeeklyGoalCompletion
	}
	return 0
}

// User streak summary for dashboard
type UserStreakSummary struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	CurrentStreak        int32                  `protobuf:"varint,1,opt,name=current_streak,json=currentStreak,proto3" json:"current_streak,omitempty"`
	LongestStreak        int32                  `protobuf:"varint,2,opt,name=longest_streak,json=longestStreak,proto3" json:"longest_streak,omitempty"`
	LastActiveDate       string                 `protobuf:"bytes,3,opt,name=last_active_date,json=lastActiveDate,proto3" json:"last_active_date,omitempty"`    // ISO 8601 date (YYYY-MM-DD)
	StreakStartDate      string                 `protobuf:"bytes,4,opt,name=streak_start_date,json=streakStartDate,proto3" json:"streak_start_date,omitempty"` // ISO 8601 date (YYYY-MM-DD)
	IsActiveToday        bool                   `protobuf:"varint,5,opt,name=is_active_today,json=isActiveToday,proto3" json:"is_active_today,omitempty"`
	DaysUntilStreakBreak int32                  `protobuf:"varint,6,opt,name=days_until_streak_break,json=daysUntilStreakBreak,proto3" json:"days_until_streak_break,omitempty"` // Days remaining before streak breaks (usually 1 if not active today)
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *UserStreakSummary) Reset() {
	*x = UserStreakSummary{}
	mi := &file_proto_dashboard_v1_dashboard_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserStreakSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStreakSummary) ProtoMessage() {}

func (x *UserStreakSummary) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_v1_dashboard_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStreakSummary.ProtoReflect.Descriptor instead.
func (*UserStreakSummary) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_v1_dashboard_proto_rawDescGZIP(), []int{3}
}

func (x *UserStreakSummary) GetCurrentStreak() int32 {
	if x != nil {
		return x.CurrentStreak
	}
	return 0
}

func (x *UserStreakSummary) GetLongestStreak() int32 {
	if x != nil {
		return x.LongestStreak
	}
	return 0
}

func (x *UserStreakSummary) GetLastActiveDate() string {
	if x != nil {
		return x.LastActiveDate
	}
	return ""
}

func (x *UserStreakSummary) GetStreakStartDate() string {
	if x != nil {
		return x.StreakStartDate
	}
	return ""
}

func (x *UserStreakSummary) GetIsActiveToday() bool {
	if x != nil {
		return x.IsActiveToday
	}
	return false
}

func (x *UserStreakSummary) GetDaysUntilStreakBreak() int32 {
	if x != nil {
		return x.DaysUntilStreakBreak
	}
	return 0
}

// User level and XP information
type UserLevelInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CurrentLevel   int32                  `protobuf:"varint,1,opt,name=current_level,json=currentLevel,proto3" json:"current_level,omitempty"`
	TotalXp        int64                  `protobuf:"varint,2,opt,name=total_xp,json=totalXp,proto3" json:"total_xp,omitempty"`
	XpToNextLevel  int32                  `protobuf:"varint,3,opt,name=xp_to_next_level,json=xpToNextLevel,proto3" json:"xp_to_next_level,omitempty"`
	CurrentLevelXp int32                  `protobuf:"varint,4,opt,name=current_level_xp,json=currentLevelXp,proto3" json:"current_level_xp,omitempty"` // XP earned in current level
	LevelProgress  float64                `protobuf:"fixed64,5,opt,name=level_progress,json=levelProgress,proto3" json:"level_progress,omitempty"`     // Percentage (0-100)
	RankPosition   int32                  `protobuf:"varint,6,opt,name=rank_position,json=rankPosition,proto3" json:"rank_position,omitempty"`         // User's position in global leaderboard (optional)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UserLevelInfo) Reset() {
	*x = UserLevelInfo{}
	mi := &file_proto_dashboard_v1_dashboard_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserLevelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLevelInfo) ProtoMessage() {}

func (x *UserLevelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_v1_dashboard_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLevelInfo.ProtoReflect.Descriptor instead.
func (*UserLevelInfo) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_v1_dashboard_proto_rawDescGZIP(), []int{4}
}

func (x *UserLevelInfo) GetCurrentLevel() int32 {
	if x != nil {
		return x.CurrentLevel
	}
	return 0
}

func (x *UserLevelInfo) GetTotalXp() int64 {
	if x != nil {
		return x.TotalXp
	}
	return 0
}

func (x *UserLevelInfo) GetXpToNextLevel() int32 {
	if x != nil {
		return x.XpToNextLevel
	}
	return 0
}

func (x *UserLevelInfo) GetCurrentLevelXp() int32 {
	if x != nil {
		return x.CurrentLevelXp
	}
	return 0
}

func (x *UserLevelInfo) GetLevelProgress() float64 {
	if x != nil {
		return x.LevelProgress
	}
	return 0
}

func (x *UserLevelInfo) GetRankPosition() int32 {
	if x != nil {
		return x.RankPosition
	}
	return 0
}

// Get dashboard data request and response
type GetDashboardDataRequest struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	UserId                 int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IncludeLeaderboardRank bool                   `protobuf:"varint,2,opt,name=include_leaderboard_rank,json=includeLeaderboardRank,proto3" json:"include_leaderboard_rank,omitempty"` // Whether to include user's leaderboard position
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetDashboardDataRequest) Reset() {
	*x = GetDashboardDataRequest{}
	mi := &file_proto_dashboard_v1_dashboard_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDashboardDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardDataRequest) ProtoMessage() {}

func (x *GetDashboardDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_v1_dashboard_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardDataRequest.ProtoReflect.Descriptor instead.
func (*GetDashboardDataRequest) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_v1_dashboard_proto_rawDescGZIP(), []int{5}
}

func (x *GetDashboardDataRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetDashboardDataRequest) GetIncludeLeaderboardRank() bool {
	if x != nil {
		return x.IncludeLeaderboardRank
	}
	return false
}

type GetDashboardDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dashboard     *DashboardData         `protobuf:"bytes,1,opt,name=dashboard,proto3" json:"dashboard,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDashboardDataResponse) Reset() {
	*x = GetDashboardDataResponse{}
	mi := &file_proto_dashboard_v1_dashboard_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDashboardDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardDataResponse) ProtoMessage() {}

func (x *GetDashboardDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_v1_dashboard_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardDataResponse.ProtoReflect.Descriptor instead.
func (*GetDashboardDataResponse) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_v1_dashboard_proto_rawDescGZIP(), []int{6}
}

func (x *GetDashboardDataResponse) GetDashboard() *DashboardData {
	if x != nil {
		return x.Dashboard
	}
	return nil
}

// Refresh dashboard request and response (forces recalculation)
type RefreshDashboardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshDashboardRequest) Reset() {
	*x = RefreshDashboardRequest{}
	mi := &file_proto_dashboard_v1_dashboard_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshDashboardRequest) ProtoMessage() {}

func (x *RefreshDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_v1_dashboard_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshDashboardRequest.ProtoReflect.Descriptor instead.
func (*RefreshDashboardRequest) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_v1_dashboard_proto_rawDescGZIP(), []int{7}
}

func (x *RefreshDashboardRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type RefreshDashboardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dashboard     *DashboardData         `protobuf:"bytes,1,opt,name=dashboard,proto3" json:"dashboard,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshDashboardResponse) Reset() {
	*x = RefreshDashboardResponse{}
	mi := &file_proto_dashboard_v1_dashboard_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshDashboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshDashboardResponse) ProtoMessage() {}

func (x *RefreshDashboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_v1_dashboard_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshDashboardResponse.ProtoReflect.Descriptor instead.
func (*RefreshDashboardResponse) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_v1_dashboard_proto_rawDescGZIP(), []int{8}
}

func (x *RefreshDashboardResponse) GetDashboard() *DashboardData {
	if x != nil {
		return x.Dashboard
	}
	return nil
}

func (x *RefreshDashboardResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_dashboard_v1_dashboard_proto protoreflect.FileDescriptor

const file_proto_dashboard_v1_dashboard_proto_rawDesc = "" +
	"\n" +
	"\"proto/dashboard/v1/dashboard.proto\x12\x12proto.dashboard.v1\x1a$proto/user_badge/v1/user_badge.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb7\x03\n" +
	"\rDashboardData\x12H\n" +
	"\x0etoday_activity\x18\x01 \x01(\v2!.proto.dashboard.v1.DailyActivityR\rtodayActivity\x12H\n" +
	"\x0eweekly_summary\x18\x02 \x01(\v2!.proto.dashboard.v1.WeeklySummaryR\rweeklySummary\x12L\n" +
	"\x0estreak_summary\x18\x03 \x01(\v2%.proto.dashboard.v1.UserStreakSummaryR\rstreakSummary\x12@\n" +
	"\n" +
	"level_info\x18\x04 \x01(\v2!.proto.dashboard.v1.UserLevelInfoR\tlevelInfo\x12C\n" +
	"\rrecent_badges\x18\x05 \x03(\v2\x1e.proto.user_badge.v1.UserBadgeR\frecentBadges\x12=\n" +
	"\flast_updated\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\"\xd7\x03\n" +
	"\rDailyActivity\x12\x12\n" +
	"\x04date\x18\x01 \x01(\tR\x04date\x12\x14\n" +
	"\x05steps\x18\x02 \x01(\x05R\x05steps\x12\x1f\n" +
	"\vdistance_km\x18\x03 \x01(\x01R\n" +
	"distanceKm\x12%\n" +
	"\x0eactive_minutes\x18\x04 \x01(\x05R\ractiveMinutes\x12\x1a\n" +
	"\bcalories\x18\x05 \x01(\x05R\bcalories\x12\x1b\n" +
	"\tstep_goal\x18\x06 \x01(\x05R\bstepGoal\x12.\n" +
	"\x13active_minutes_goal\x18\a \x01(\x05R\x11activeMinutesGoal\x12%\n" +
	"\x0esteps_progress\x18\b \x01(\x01R\rstepsProgress\x126\n" +
	"\x17active_minutes_progress\x18\t \x01(\x01R\x15activeMinutesProgress\x12'\n" +
	"\x10is_step_goal_met\x18\n" +
	" \x01(\bR\risStepGoalMet\x12:\n" +
	"\x1ais_active_minutes_goal_met\x18\v \x01(\bR\x16isActiveMinutesGoalMet\x12'\n" +
	"\x10is_all_goals_met\x18\f \x01(\bR\risAllGoalsMet\"\xa6\x04\n" +
	"\rWeeklySummary\x12\x1d\n" +
	"\n" +
	"week_start\x18\x01 \x01(\tR\tweekStart\x12\x19\n" +
	"\bweek_end\x18\x02 \x01(\tR\aweekEnd\x12\x1f\n" +
	"\vtotal_steps\x18\x03 \x01(\x05R\n" +
	"totalSteps\x12*\n" +
	"\x11total_distance_km\x18\x04 \x01(\x01R\x0ftotalDistanceKm\x120\n" +
	"\x14total_active_minutes\x18\x05 \x01(\x05R\x12totalActiveMinutes\x12%\n" +
	"\x0etotal_calories\x18\x06 \x01(\x05R\rtotalCalories\x12\x1f\n" +
	"\vactive_days\x18\a \x01(\x05R\n" +
	"activeDays\x12.\n" +
	"\x13goals_days_achieved\x18\b \x01(\x05R\x11goalsDaysAchieved\x121\n" +
	"\x15average_steps_per_day\x18\t \x01(\x05R\x12averageStepsPerDay\x127\n" +
	"\x18average_distance_per_day\x18\n" +
	" \x01(\x01R\x15averageDistancePerDay\x12B\n" +
	"\x1eaverage_active_minutes_per_day\x18\v \x01(\x05R\x1aaverageActiveMinutesPerDay\x124\n" +
	"\x16weekly_goal_completion\x18\f \x01(\x01R\x14weeklyGoalCompletion\"\x96\x02\n" +
	"\x11UserStreakSummary\x12%\n" +
	"\x0ecurrent_streak\x18\x01 \x01(\x05R\rcurrentStreak\x12%\n" +
	"\x0elongest_streak\x18\x02 \x01(\x05R\rlongestStreak\x12(\n" +
	"\x10last_active_date\x18\x03 \x01(\tR\x0elastActiveDate\x12*\n" +
	"\x11streak_start_date\x18\x04 \x01(\tR\x0fstreakStartDate\x12&\n" +
	"\x0fis_active_today\x18\x05 \x01(\bR\risActiveToday\x125\n" +
	"\x17days_until_streak_break\x18\x06 \x01(\x05R\x14daysUntilStreakBreak\"\xee\x01\n" +
	"\rUserLevelInfo\x12#\n" +
	"\rcurrent_level\x18\x01 \x01(\x05R\fcurrentLevel\x12\x19\n" +
	"\btotal_xp\x18\x02 \x01(\x03R\atotalXp\x12'\n" +
	"\x10xp_to_next_level\x18\x03 \x01(\x05R\rxpToNextLevel\x12(\n" +
	"\x10current_level_xp\x18\x04 \x01(\x05R\x0ecurrentLevelXp\x12%\n" +
	"\x0elevel_progress\x18\x05 \x01(\x01R\rlevelProgress\x12#\n" +
	"\rrank_position\x18\x06 \x01(\x05R\frankPosition\"l\n" +
	"\x17GetDashboardDataRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\x128\n" +
	"\x18include_leaderboard_rank\x18\x02 \x01(\bR\x16includeLeaderboardRank\"[\n" +
	"\x18GetDashboardDataResponse\x12?\n" +
	"\tdashboard\x18\x01 \x01(\v2!.proto.dashboard.v1.DashboardDataR\tdashboard\"2\n" +
	"\x17RefreshDashboardRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\"u\n" +
	"\x18RefreshDashboardResponse\x12?\n" +
	"\tdashboard\x18\x01 \x01(\v2!.proto.dashboard.v1.DashboardDataR\tdashboard\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess2\xf0\x01\n" +
	"\x10DashboardService\x12m\n" +
	"\x10GetDashboardData\x12+.proto.dashboard.v1.GetDashboardDataRequest\x1a,.proto.dashboard.v1.GetDashboardDataResponse\x12m\n" +
	"\x10RefreshDashboard\x12+.proto.dashboard.v1.RefreshDashboardRequest\x1a,.proto.dashboard.v1.RefreshDashboardResponseB[ZYgithub.com/supersecretorganisation/proto-schemas/v2/gen/go/proto/dashboard/v1;dashboardpbb\x06proto3"

var (
	file_proto_dashboard_v1_dashboard_proto_rawDescOnce sync.Once
	file_proto_dashboard_v1_dashboard_proto_rawDescData []byte
)

func file_proto_dashboard_v1_dashboard_proto_rawDescGZIP() []byte {
	file_proto_dashboard_v1_dashboard_proto_rawDescOnce.Do(func() {
		file_proto_dashboard_v1_dashboard_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_dashboard_v1_dashboard_proto_rawDesc), len(file_proto_dashboard_v1_dashboard_proto_rawDesc)))
	})
	return file_proto_dashboard_v1_dashboard_proto_rawDescData
}

var file_proto_dashboard_v1_dashboard_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_dashboard_v1_dashboard_proto_goTypes = []any{
	(*DashboardData)(nil),            // 0: proto.dashboard.v1.DashboardData
	(*DailyActivity)(nil),            // 1: proto.dashboard.v1.DailyActivity
	(*WeeklySummary)(nil),            // 2: proto.dashboard.v1.WeeklySummary
	(*UserStreakSummary)(nil),        // 3: proto.dashboard.v1.UserStreakSummary
	(*UserLevelInfo)(nil),            // 4: proto.dashboard.v1.UserLevelInfo
	(*GetDashboardDataRequest)(nil),  // 5: proto.dashboard.v1.GetDashboardDataRequest
	(*GetDashboardDataResponse)(nil), // 6: proto.dashboard.v1.GetDashboardDataResponse
	(*RefreshDashboardRequest)(nil),  // 7: proto.dashboard.v1.RefreshDashboardRequest
	(*RefreshDashboardResponse)(nil), // 8: proto.dashboard.v1.RefreshDashboardResponse
	(*v1.UserBadge)(nil),             // 9: proto.user_badge.v1.UserBadge
	(*timestamppb.Timestamp)(nil),    // 10: google.protobuf.Timestamp
}
var file_proto_dashboard_v1_dashboard_proto_depIdxs = []int32{
	1,  // 0: proto.dashboard.v1.DashboardData.today_activity:type_name -> proto.dashboard.v1.DailyActivity
	2,  // 1: proto.dashboard.v1.DashboardData.weekly_summary:type_name -> proto.dashboard.v1.WeeklySummary
	3,  // 2: proto.dashboard.v1.DashboardData.streak_summary:type_name -> proto.dashboard.v1.UserStreakSummary
	4,  // 3: proto.dashboard.v1.DashboardData.level_info:type_name -> proto.dashboard.v1.UserLevelInfo
	9,  // 4: proto.dashboard.v1.DashboardData.recent_badges:type_name -> proto.user_badge.v1.UserBadge
	10, // 5: proto.dashboard.v1.DashboardData.last_updated:type_name -> google.protobuf.Timestamp
	0,  // 6: proto.dashboard.v1.GetDashboardDataResponse.dashboard:type_name -> proto.dashboard.v1.DashboardData
	0,  // 7: proto.dashboard.v1.RefreshDashboardResponse.dashboard:type_name -> proto.dashboard.v1.DashboardData
	5,  // 8: proto.dashboard.v1.DashboardService.GetDashboardData:input_type -> proto.dashboard.v1.GetDashboardDataRequest
	7,  // 9: proto.dashboard.v1.DashboardService.RefreshDashboard:input_type -> proto.dashboard.v1.RefreshDashboardRequest
	6,  // 10: proto.dashboard.v1.DashboardService.GetDashboardData:output_type -> proto.dashboard.v1.GetDashboardDataResponse
	8,  // 11: proto.dashboard.v1.DashboardService.RefreshDashboard:output_type -> proto.dashboard.v1.RefreshDashboardResponse
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_dashboard_v1_dashboard_proto_init() }
func file_proto_dashboard_v1_dashboard_proto_init() {
	if File_proto_dashboard_v1_dashboard_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_dashboard_v1_dashboard_proto_rawDesc), len(file_proto_dashboard_v1_dashboard_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_dashboard_v1_dashboard_proto_goTypes,
		DependencyIndexes: file_proto_dashboard_v1_dashboard_proto_depIdxs,
		MessageInfos:      file_proto_dashboard_v1_dashboard_proto_msgTypes,
	}.Build()
	File_proto_dashboard_v1_dashboard_proto = out.File
	file_proto_dashboard_v1_dashboard_proto_goTypes = nil
	file_proto_dashboard_v1_dashboard_proto_depIdxs = nil
}
