// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/badge/v1/badge.proto

package badgepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Badge message definition
type Badge struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BadgeKey         string                 `protobuf:"bytes,2,opt,name=badge_key,json=badgeKey,proto3" json:"badge_key,omitempty"`
	Name             string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description      string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Category         string                 `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"` // milestone, achievement, seasonal, rare, social
	Level            int32                  `protobuf:"varint,6,opt,name=level,proto3" json:"level,omitempty"`      // 1=bronze, 2=silver, 3=gold, 4=platinum
	IconUrl          string                 `protobuf:"bytes,7,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	RequirementType  string                 `protobuf:"bytes,8,opt,name=requirement_type,json=requirementType,proto3" json:"requirement_type,omitempty"` // workout_count, streak_days, distance, etc.
	RequirementValue int32                  `protobuf:"varint,9,opt,name=requirement_value,json=requirementValue,proto3" json:"requirement_value,omitempty"`
	Points           int32                  `protobuf:"varint,10,opt,name=points,proto3" json:"points,omitempty"`
	IsActive         bool                   `protobuf:"varint,11,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	CreatedAt        string                 `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        string                 `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Badge) Reset() {
	*x = Badge{}
	mi := &file_proto_badge_v1_badge_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Badge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Badge) ProtoMessage() {}

func (x *Badge) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_v1_badge_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Badge.ProtoReflect.Descriptor instead.
func (*Badge) Descriptor() ([]byte, []int) {
	return file_proto_badge_v1_badge_proto_rawDescGZIP(), []int{0}
}

func (x *Badge) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Badge) GetBadgeKey() string {
	if x != nil {
		return x.BadgeKey
	}
	return ""
}

func (x *Badge) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Badge) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Badge) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Badge) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Badge) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *Badge) GetRequirementType() string {
	if x != nil {
		return x.RequirementType
	}
	return ""
}

func (x *Badge) GetRequirementValue() int32 {
	if x != nil {
		return x.RequirementValue
	}
	return 0
}

func (x *Badge) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *Badge) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Badge) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Badge) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// Get badge request and response
type GetBadgeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBadgeRequest) Reset() {
	*x = GetBadgeRequest{}
	mi := &file_proto_badge_v1_badge_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBadgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBadgeRequest) ProtoMessage() {}

func (x *GetBadgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_v1_badge_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBadgeRequest.ProtoReflect.Descriptor instead.
func (*GetBadgeRequest) Descriptor() ([]byte, []int) {
	return file_proto_badge_v1_badge_proto_rawDescGZIP(), []int{1}
}

func (x *GetBadgeRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetBadgeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Badge         *Badge                 `protobuf:"bytes,1,opt,name=badge,proto3" json:"badge,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBadgeResponse) Reset() {
	*x = GetBadgeResponse{}
	mi := &file_proto_badge_v1_badge_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBadgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBadgeResponse) ProtoMessage() {}

func (x *GetBadgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_v1_badge_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBadgeResponse.ProtoReflect.Descriptor instead.
func (*GetBadgeResponse) Descriptor() ([]byte, []int) {
	return file_proto_badge_v1_badge_proto_rawDescGZIP(), []int{2}
}

func (x *GetBadgeResponse) GetBadge() *Badge {
	if x != nil {
		return x.Badge
	}
	return nil
}

// List badges request and response
type ListBadgesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBadgesRequest) Reset() {
	*x = ListBadgesRequest{}
	mi := &file_proto_badge_v1_badge_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBadgesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBadgesRequest) ProtoMessage() {}

func (x *ListBadgesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_v1_badge_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBadgesRequest.ProtoReflect.Descriptor instead.
func (*ListBadgesRequest) Descriptor() ([]byte, []int) {
	return file_proto_badge_v1_badge_proto_rawDescGZIP(), []int{3}
}

func (x *ListBadgesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListBadgesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListBadgesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Badges        []*Badge               `protobuf:"bytes,1,rep,name=badges,proto3" json:"badges,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBadgesResponse) Reset() {
	*x = ListBadgesResponse{}
	mi := &file_proto_badge_v1_badge_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBadgesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBadgesResponse) ProtoMessage() {}

func (x *ListBadgesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_v1_badge_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBadgesResponse.ProtoReflect.Descriptor instead.
func (*ListBadgesResponse) Descriptor() ([]byte, []int) {
	return file_proto_badge_v1_badge_proto_rawDescGZIP(), []int{4}
}

func (x *ListBadgesResponse) GetBadges() []*Badge {
	if x != nil {
		return x.Badges
	}
	return nil
}

func (x *ListBadgesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Get badges by category request and response
type GetBadgesByCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Category      string                 `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBadgesByCategoryRequest) Reset() {
	*x = GetBadgesByCategoryRequest{}
	mi := &file_proto_badge_v1_badge_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBadgesByCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBadgesByCategoryRequest) ProtoMessage() {}

func (x *GetBadgesByCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_v1_badge_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBadgesByCategoryRequest.ProtoReflect.Descriptor instead.
func (*GetBadgesByCategoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_badge_v1_badge_proto_rawDescGZIP(), []int{5}
}

func (x *GetBadgesByCategoryRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type GetBadgesByCategoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Badges        []*Badge               `protobuf:"bytes,1,rep,name=badges,proto3" json:"badges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBadgesByCategoryResponse) Reset() {
	*x = GetBadgesByCategoryResponse{}
	mi := &file_proto_badge_v1_badge_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBadgesByCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBadgesByCategoryResponse) ProtoMessage() {}

func (x *GetBadgesByCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_v1_badge_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBadgesByCategoryResponse.ProtoReflect.Descriptor instead.
func (*GetBadgesByCategoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_badge_v1_badge_proto_rawDescGZIP(), []int{6}
}

func (x *GetBadgesByCategoryResponse) GetBadges() []*Badge {
	if x != nil {
		return x.Badges
	}
	return nil
}

// Get badges by level request and response
type GetBadgesByLevelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         int32                  `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBadgesByLevelRequest) Reset() {
	*x = GetBadgesByLevelRequest{}
	mi := &file_proto_badge_v1_badge_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBadgesByLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBadgesByLevelRequest) ProtoMessage() {}

func (x *GetBadgesByLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_v1_badge_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBadgesByLevelRequest.ProtoReflect.Descriptor instead.
func (*GetBadgesByLevelRequest) Descriptor() ([]byte, []int) {
	return file_proto_badge_v1_badge_proto_rawDescGZIP(), []int{7}
}

func (x *GetBadgesByLevelRequest) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type GetBadgesByLevelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Badges        []*Badge               `protobuf:"bytes,1,rep,name=badges,proto3" json:"badges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBadgesByLevelResponse) Reset() {
	*x = GetBadgesByLevelResponse{}
	mi := &file_proto_badge_v1_badge_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBadgesByLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBadgesByLevelResponse) ProtoMessage() {}

func (x *GetBadgesByLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_v1_badge_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBadgesByLevelResponse.ProtoReflect.Descriptor instead.
func (*GetBadgesByLevelResponse) Descriptor() ([]byte, []int) {
	return file_proto_badge_v1_badge_proto_rawDescGZIP(), []int{8}
}

func (x *GetBadgesByLevelResponse) GetBadges() []*Badge {
	if x != nil {
		return x.Badges
	}
	return nil
}

// Create badge request and response
type CreateBadgeRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BadgeKey         string                 `protobuf:"bytes,1,opt,name=badge_key,json=badgeKey,proto3" json:"badge_key,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description      string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Category         string                 `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Level            int32                  `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	IconUrl          string                 `protobuf:"bytes,6,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	RequirementType  string                 `protobuf:"bytes,7,opt,name=requirement_type,json=requirementType,proto3" json:"requirement_type,omitempty"`
	RequirementValue int32                  `protobuf:"varint,8,opt,name=requirement_value,json=requirementValue,proto3" json:"requirement_value,omitempty"`
	Points           int32                  `protobuf:"varint,9,opt,name=points,proto3" json:"points,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateBadgeRequest) Reset() {
	*x = CreateBadgeRequest{}
	mi := &file_proto_badge_v1_badge_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBadgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBadgeRequest) ProtoMessage() {}

func (x *CreateBadgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_v1_badge_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBadgeRequest.ProtoReflect.Descriptor instead.
func (*CreateBadgeRequest) Descriptor() ([]byte, []int) {
	return file_proto_badge_v1_badge_proto_rawDescGZIP(), []int{9}
}

func (x *CreateBadgeRequest) GetBadgeKey() string {
	if x != nil {
		return x.BadgeKey
	}
	return ""
}

func (x *CreateBadgeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateBadgeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateBadgeRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CreateBadgeRequest) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *CreateBadgeRequest) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *CreateBadgeRequest) GetRequirementType() string {
	if x != nil {
		return x.RequirementType
	}
	return ""
}

func (x *CreateBadgeRequest) GetRequirementValue() int32 {
	if x != nil {
		return x.RequirementValue
	}
	return 0
}

func (x *CreateBadgeRequest) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

type CreateBadgeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Badge         *Badge                 `protobuf:"bytes,1,opt,name=badge,proto3" json:"badge,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBadgeResponse) Reset() {
	*x = CreateBadgeResponse{}
	mi := &file_proto_badge_v1_badge_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBadgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBadgeResponse) ProtoMessage() {}

func (x *CreateBadgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_v1_badge_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBadgeResponse.ProtoReflect.Descriptor instead.
func (*CreateBadgeResponse) Descriptor() ([]byte, []int) {
	return file_proto_badge_v1_badge_proto_rawDescGZIP(), []int{10}
}

func (x *CreateBadgeResponse) GetBadge() *Badge {
	if x != nil {
		return x.Badge
	}
	return nil
}

// Update badge request and response
type UpdateBadgeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IconUrl       string                 `protobuf:"bytes,4,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	Points        int32                  `protobuf:"varint,5,opt,name=points,proto3" json:"points,omitempty"`
	IsActive      bool                   `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBadgeRequest) Reset() {
	*x = UpdateBadgeRequest{}
	mi := &file_proto_badge_v1_badge_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBadgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBadgeRequest) ProtoMessage() {}

func (x *UpdateBadgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_v1_badge_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBadgeRequest.ProtoReflect.Descriptor instead.
func (*UpdateBadgeRequest) Descriptor() ([]byte, []int) {
	return file_proto_badge_v1_badge_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateBadgeRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateBadgeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateBadgeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateBadgeRequest) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *UpdateBadgeRequest) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *UpdateBadgeRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type UpdateBadgeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Badge         *Badge                 `protobuf:"bytes,1,opt,name=badge,proto3" json:"badge,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBadgeResponse) Reset() {
	*x = UpdateBadgeResponse{}
	mi := &file_proto_badge_v1_badge_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBadgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBadgeResponse) ProtoMessage() {}

func (x *UpdateBadgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_v1_badge_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBadgeResponse.ProtoReflect.Descriptor instead.
func (*UpdateBadgeResponse) Descriptor() ([]byte, []int) {
	return file_proto_badge_v1_badge_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateBadgeResponse) GetBadge() *Badge {
	if x != nil {
		return x.Badge
	}
	return nil
}

// Delete badge request and response
type DeleteBadgeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBadgeRequest) Reset() {
	*x = DeleteBadgeRequest{}
	mi := &file_proto_badge_v1_badge_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBadgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBadgeRequest) ProtoMessage() {}

func (x *DeleteBadgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_v1_badge_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBadgeRequest.ProtoReflect.Descriptor instead.
func (*DeleteBadgeRequest) Descriptor() ([]byte, []int) {
	return file_proto_badge_v1_badge_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteBadgeRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteBadgeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBadgeResponse) Reset() {
	*x = DeleteBadgeResponse{}
	mi := &file_proto_badge_v1_badge_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBadgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBadgeResponse) ProtoMessage() {}

func (x *DeleteBadgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_badge_v1_badge_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBadgeResponse.ProtoReflect.Descriptor instead.
func (*DeleteBadgeResponse) Descriptor() ([]byte, []int) {
	return file_proto_badge_v1_badge_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteBadgeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_badge_v1_badge_proto protoreflect.FileDescriptor

const file_proto_badge_v1_badge_proto_rawDesc = "" +
	"\n" +
	"\x1aproto/badge/v1/badge.proto\x12\x0eproto.badge.v1\"\x82\x03\n" +
	"\x05Badge\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x1b\n" +
	"\tbadge_key\x18\x02 \x01(\tR\bbadgeKey\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1a\n" +
	"\bcategory\x18\x05 \x01(\tR\bcategory\x12\x14\n" +
	"\x05level\x18\x06 \x01(\x05R\x05level\x12\x19\n" +
	"\bicon_url\x18\a \x01(\tR\aiconUrl\x12)\n" +
	"\x10requirement_type\x18\b \x01(\tR\x0frequirementType\x12+\n" +
	"\x11requirement_value\x18\t \x01(\x05R\x10requirementValue\x12\x16\n" +
	"\x06points\x18\n" +
	" \x01(\x05R\x06points\x12\x1b\n" +
	"\tis_active\x18\v \x01(\bR\bisActive\x12\x1d\n" +
	"\n" +
	"created_at\x18\f \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\r \x01(\tR\tupdatedAt\"!\n" +
	"\x0fGetBadgeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"?\n" +
	"\x10GetBadgeResponse\x12+\n" +
	"\x05badge\x18\x01 \x01(\v2\x15.proto.badge.v1.BadgeR\x05badge\"D\n" +
	"\x11ListBadgesRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\"d\n" +
	"\x12ListBadgesResponse\x12-\n" +
	"\x06badges\x18\x01 \x03(\v2\x15.proto.badge.v1.BadgeR\x06badges\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"8\n" +
	"\x1aGetBadgesByCategoryRequest\x12\x1a\n" +
	"\bcategory\x18\x01 \x01(\tR\bcategory\"L\n" +
	"\x1bGetBadgesByCategoryResponse\x12-\n" +
	"\x06badges\x18\x01 \x03(\v2\x15.proto.badge.v1.BadgeR\x06badges\"/\n" +
	"\x17GetBadgesByLevelRequest\x12\x14\n" +
	"\x05level\x18\x01 \x01(\x05R\x05level\"I\n" +
	"\x18GetBadgesByLevelResponse\x12-\n" +
	"\x06badges\x18\x01 \x03(\v2\x15.proto.badge.v1.BadgeR\x06badges\"\xa4\x02\n" +
	"\x12CreateBadgeRequest\x12\x1b\n" +
	"\tbadge_key\x18\x01 \x01(\tR\bbadgeKey\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1a\n" +
	"\bcategory\x18\x04 \x01(\tR\bcategory\x12\x14\n" +
	"\x05level\x18\x05 \x01(\x05R\x05level\x12\x19\n" +
	"\bicon_url\x18\x06 \x01(\tR\aiconUrl\x12)\n" +
	"\x10requirement_type\x18\a \x01(\tR\x0frequirementType\x12+\n" +
	"\x11requirement_value\x18\b \x01(\x05R\x10requirementValue\x12\x16\n" +
	"\x06points\x18\t \x01(\x05R\x06points\"B\n" +
	"\x13CreateBadgeResponse\x12+\n" +
	"\x05badge\x18\x01 \x01(\v2\x15.proto.badge.v1.BadgeR\x05badge\"\xaa\x01\n" +
	"\x12UpdateBadgeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x19\n" +
	"\bicon_url\x18\x04 \x01(\tR\aiconUrl\x12\x16\n" +
	"\x06points\x18\x05 \x01(\x05R\x06points\x12\x1b\n" +
	"\tis_active\x18\x06 \x01(\bR\bisActive\"B\n" +
	"\x13UpdateBadgeResponse\x12+\n" +
	"\x05badge\x18\x01 \x01(\v2\x15.proto.badge.v1.BadgeR\x05badge\"$\n" +
	"\x12DeleteBadgeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"/\n" +
	"\x13DeleteBadgeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\x91\x05\n" +
	"\fBadgeService\x12M\n" +
	"\bGetBadge\x12\x1f.proto.badge.v1.GetBadgeRequest\x1a .proto.badge.v1.GetBadgeResponse\x12S\n" +
	"\n" +
	"ListBadges\x12!.proto.badge.v1.ListBadgesRequest\x1a\".proto.badge.v1.ListBadgesResponse\x12n\n" +
	"\x13GetBadgesByCategory\x12*.proto.badge.v1.GetBadgesByCategoryRequest\x1a+.proto.badge.v1.GetBadgesByCategoryResponse\x12e\n" +
	"\x10GetBadgesByLevel\x12'.proto.badge.v1.GetBadgesByLevelRequest\x1a(.proto.badge.v1.GetBadgesByLevelResponse\x12V\n" +
	"\vCreateBadge\x12\".proto.badge.v1.CreateBadgeRequest\x1a#.proto.badge.v1.CreateBadgeResponse\x12V\n" +
	"\vUpdateBadge\x12\".proto.badge.v1.UpdateBadgeRequest\x1a#.proto.badge.v1.UpdateBadgeResponse\x12V\n" +
	"\vDeleteBadge\x12\".proto.badge.v1.DeleteBadgeRequest\x1a#.proto.badge.v1.DeleteBadgeResponseBSZQgithub.com/supersecretorganisation/proto-schemas/v2/gen/go/proto/badge/v1;badgepbb\x06proto3"

var (
	file_proto_badge_v1_badge_proto_rawDescOnce sync.Once
	file_proto_badge_v1_badge_proto_rawDescData []byte
)

func file_proto_badge_v1_badge_proto_rawDescGZIP() []byte {
	file_proto_badge_v1_badge_proto_rawDescOnce.Do(func() {
		file_proto_badge_v1_badge_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_badge_v1_badge_proto_rawDesc), len(file_proto_badge_v1_badge_proto_rawDesc)))
	})
	return file_proto_badge_v1_badge_proto_rawDescData
}

var file_proto_badge_v1_badge_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_badge_v1_badge_proto_goTypes = []any{
	(*Badge)(nil),                       // 0: proto.badge.v1.Badge
	(*GetBadgeRequest)(nil),             // 1: proto.badge.v1.GetBadgeRequest
	(*GetBadgeResponse)(nil),            // 2: proto.badge.v1.GetBadgeResponse
	(*ListBadgesRequest)(nil),           // 3: proto.badge.v1.ListBadgesRequest
	(*ListBadgesResponse)(nil),          // 4: proto.badge.v1.ListBadgesResponse
	(*GetBadgesByCategoryRequest)(nil),  // 5: proto.badge.v1.GetBadgesByCategoryRequest
	(*GetBadgesByCategoryResponse)(nil), // 6: proto.badge.v1.GetBadgesByCategoryResponse
	(*GetBadgesByLevelRequest)(nil),     // 7: proto.badge.v1.GetBadgesByLevelRequest
	(*GetBadgesByLevelResponse)(nil),    // 8: proto.badge.v1.GetBadgesByLevelResponse
	(*CreateBadgeRequest)(nil),          // 9: proto.badge.v1.CreateBadgeRequest
	(*CreateBadgeResponse)(nil),         // 10: proto.badge.v1.CreateBadgeResponse
	(*UpdateBadgeRequest)(nil),          // 11: proto.badge.v1.UpdateBadgeRequest
	(*UpdateBadgeResponse)(nil),         // 12: proto.badge.v1.UpdateBadgeResponse
	(*DeleteBadgeRequest)(nil),          // 13: proto.badge.v1.DeleteBadgeRequest
	(*DeleteBadgeResponse)(nil),         // 14: proto.badge.v1.DeleteBadgeResponse
}
var file_proto_badge_v1_badge_proto_depIdxs = []int32{
	0,  // 0: proto.badge.v1.GetBadgeResponse.badge:type_name -> proto.badge.v1.Badge
	0,  // 1: proto.badge.v1.ListBadgesResponse.badges:type_name -> proto.badge.v1.Badge
	0,  // 2: proto.badge.v1.GetBadgesByCategoryResponse.badges:type_name -> proto.badge.v1.Badge
	0,  // 3: proto.badge.v1.GetBadgesByLevelResponse.badges:type_name -> proto.badge.v1.Badge
	0,  // 4: proto.badge.v1.CreateBadgeResponse.badge:type_name -> proto.badge.v1.Badge
	0,  // 5: proto.badge.v1.UpdateBadgeResponse.badge:type_name -> proto.badge.v1.Badge
	1,  // 6: proto.badge.v1.BadgeService.GetBadge:input_type -> proto.badge.v1.GetBadgeRequest
	3,  // 7: proto.badge.v1.BadgeService.ListBadges:input_type -> proto.badge.v1.ListBadgesRequest
	5,  // 8: proto.badge.v1.BadgeService.GetBadgesByCategory:input_type -> proto.badge.v1.GetBadgesByCategoryRequest
	7,  // 9: proto.badge.v1.BadgeService.GetBadgesByLevel:input_type -> proto.badge.v1.GetBadgesByLevelRequest
	9,  // 10: proto.badge.v1.BadgeService.CreateBadge:input_type -> proto.badge.v1.CreateBadgeRequest
	11, // 11: proto.badge.v1.BadgeService.UpdateBadge:input_type -> proto.badge.v1.UpdateBadgeRequest
	13, // 12: proto.badge.v1.BadgeService.DeleteBadge:input_type -> proto.badge.v1.DeleteBadgeRequest
	2,  // 13: proto.badge.v1.BadgeService.GetBadge:output_type -> proto.badge.v1.GetBadgeResponse
	4,  // 14: proto.badge.v1.BadgeService.ListBadges:output_type -> proto.badge.v1.ListBadgesResponse
	6,  // 15: proto.badge.v1.BadgeService.GetBadgesByCategory:output_type -> proto.badge.v1.GetBadgesByCategoryResponse
	8,  // 16: proto.badge.v1.BadgeService.GetBadgesByLevel:output_type -> proto.badge.v1.GetBadgesByLevelResponse
	10, // 17: proto.badge.v1.BadgeService.CreateBadge:output_type -> proto.badge.v1.CreateBadgeResponse
	12, // 18: proto.badge.v1.BadgeService.UpdateBadge:output_type -> proto.badge.v1.UpdateBadgeResponse
	14, // 19: proto.badge.v1.BadgeService.DeleteBadge:output_type -> proto.badge.v1.DeleteBadgeResponse
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_badge_v1_badge_proto_init() }
func file_proto_badge_v1_badge_proto_init() {
	if File_proto_badge_v1_badge_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_badge_v1_badge_proto_rawDesc), len(file_proto_badge_v1_badge_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_badge_v1_badge_proto_goTypes,
		DependencyIndexes: file_proto_badge_v1_badge_proto_depIdxs,
		MessageInfos:      file_proto_badge_v1_badge_proto_msgTypes,
	}.Build()
	File_proto_badge_v1_badge_proto = out.File
	file_proto_badge_v1_badge_proto_goTypes = nil
	file_proto_badge_v1_badge_proto_depIdxs = nil
}
