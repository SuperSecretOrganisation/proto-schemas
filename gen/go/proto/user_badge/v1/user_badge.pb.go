// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/user_badge/v1/user_badge.proto

package userbadgepb

import (
	v1 "github.com/supersecretorganisation/proto-schemas/v2/gen/go/proto/badge/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UserBadge message definition
type UserBadge struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BadgeId       int32                  `protobuf:"varint,3,opt,name=badge_id,json=badgeId,proto3" json:"badge_id,omitempty"`
	EarnedAt      string                 `protobuf:"bytes,4,opt,name=earned_at,json=earnedAt,proto3" json:"earned_at,omitempty"`
	IsShared      bool                   `protobuf:"varint,5,opt,name=is_shared,json=isShared,proto3" json:"is_shared,omitempty"`
	SharedAt      string                 `protobuf:"bytes,6,opt,name=shared_at,json=sharedAt,proto3" json:"shared_at,omitempty"`
	Badge         *v1.Badge              `protobuf:"bytes,7,opt,name=badge,proto3" json:"badge,omitempty"` // Preloaded badge information
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserBadge) Reset() {
	*x = UserBadge{}
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserBadge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBadge) ProtoMessage() {}

func (x *UserBadge) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBadge.ProtoReflect.Descriptor instead.
func (*UserBadge) Descriptor() ([]byte, []int) {
	return file_proto_user_badge_v1_user_badge_proto_rawDescGZIP(), []int{0}
}

func (x *UserBadge) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserBadge) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserBadge) GetBadgeId() int32 {
	if x != nil {
		return x.BadgeId
	}
	return 0
}

func (x *UserBadge) GetEarnedAt() string {
	if x != nil {
		return x.EarnedAt
	}
	return ""
}

func (x *UserBadge) GetIsShared() bool {
	if x != nil {
		return x.IsShared
	}
	return false
}

func (x *UserBadge) GetSharedAt() string {
	if x != nil {
		return x.SharedAt
	}
	return ""
}

func (x *UserBadge) GetBadge() *v1.Badge {
	if x != nil {
		return x.Badge
	}
	return nil
}

// Get user badges request and response
type GetUserBadgesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBadgesRequest) Reset() {
	*x = GetUserBadgesRequest{}
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBadgesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBadgesRequest) ProtoMessage() {}

func (x *GetUserBadgesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBadgesRequest.ProtoReflect.Descriptor instead.
func (*GetUserBadgesRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_badge_v1_user_badge_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserBadgesRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserBadgesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserBadges    []*UserBadge           `protobuf:"bytes,1,rep,name=user_badges,json=userBadges,proto3" json:"user_badges,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBadgesResponse) Reset() {
	*x = GetUserBadgesResponse{}
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBadgesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBadgesResponse) ProtoMessage() {}

func (x *GetUserBadgesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBadgesResponse.ProtoReflect.Descriptor instead.
func (*GetUserBadgesResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_badge_v1_user_badge_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserBadgesResponse) GetUserBadges() []*UserBadge {
	if x != nil {
		return x.UserBadges
	}
	return nil
}

func (x *GetUserBadgesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Award badge request and response
type AwardBadgeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BadgeId       int32                  `protobuf:"varint,2,opt,name=badge_id,json=badgeId,proto3" json:"badge_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AwardBadgeRequest) Reset() {
	*x = AwardBadgeRequest{}
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwardBadgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwardBadgeRequest) ProtoMessage() {}

func (x *AwardBadgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwardBadgeRequest.ProtoReflect.Descriptor instead.
func (*AwardBadgeRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_badge_v1_user_badge_proto_rawDescGZIP(), []int{3}
}

func (x *AwardBadgeRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AwardBadgeRequest) GetBadgeId() int32 {
	if x != nil {
		return x.BadgeId
	}
	return 0
}

type AwardBadgeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserBadge     *UserBadge             `protobuf:"bytes,1,opt,name=user_badge,json=userBadge,proto3" json:"user_badge,omitempty"`
	NewlyEarned   bool                   `protobuf:"varint,2,opt,name=newly_earned,json=newlyEarned,proto3" json:"newly_earned,omitempty"` // true if badge was just earned, false if already had it
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AwardBadgeResponse) Reset() {
	*x = AwardBadgeResponse{}
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwardBadgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwardBadgeResponse) ProtoMessage() {}

func (x *AwardBadgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwardBadgeResponse.ProtoReflect.Descriptor instead.
func (*AwardBadgeResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_badge_v1_user_badge_proto_rawDescGZIP(), []int{4}
}

func (x *AwardBadgeResponse) GetUserBadge() *UserBadge {
	if x != nil {
		return x.UserBadge
	}
	return nil
}

func (x *AwardBadgeResponse) GetNewlyEarned() bool {
	if x != nil {
		return x.NewlyEarned
	}
	return false
}

// Share badge request and response
type ShareBadgeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BadgeId       int32                  `protobuf:"varint,2,opt,name=badge_id,json=badgeId,proto3" json:"badge_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShareBadgeRequest) Reset() {
	*x = ShareBadgeRequest{}
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareBadgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareBadgeRequest) ProtoMessage() {}

func (x *ShareBadgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareBadgeRequest.ProtoReflect.Descriptor instead.
func (*ShareBadgeRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_badge_v1_user_badge_proto_rawDescGZIP(), []int{5}
}

func (x *ShareBadgeRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ShareBadgeRequest) GetBadgeId() int32 {
	if x != nil {
		return x.BadgeId
	}
	return 0
}

type ShareBadgeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ShareUrl      string                 `protobuf:"bytes,2,opt,name=share_url,json=shareUrl,proto3" json:"share_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShareBadgeResponse) Reset() {
	*x = ShareBadgeResponse{}
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareBadgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareBadgeResponse) ProtoMessage() {}

func (x *ShareBadgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareBadgeResponse.ProtoReflect.Descriptor instead.
func (*ShareBadgeResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_badge_v1_user_badge_proto_rawDescGZIP(), []int{6}
}

func (x *ShareBadgeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ShareBadgeResponse) GetShareUrl() string {
	if x != nil {
		return x.ShareUrl
	}
	return ""
}

// Get recent badges request and response
type GetRecentBadgesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecentBadgesRequest) Reset() {
	*x = GetRecentBadgesRequest{}
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecentBadgesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentBadgesRequest) ProtoMessage() {}

func (x *GetRecentBadgesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentBadgesRequest.ProtoReflect.Descriptor instead.
func (*GetRecentBadgesRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_badge_v1_user_badge_proto_rawDescGZIP(), []int{7}
}

func (x *GetRecentBadgesRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetRecentBadgesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetRecentBadgesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserBadges    []*UserBadge           `protobuf:"bytes,1,rep,name=user_badges,json=userBadges,proto3" json:"user_badges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecentBadgesResponse) Reset() {
	*x = GetRecentBadgesResponse{}
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecentBadgesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentBadgesResponse) ProtoMessage() {}

func (x *GetRecentBadgesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentBadgesResponse.ProtoReflect.Descriptor instead.
func (*GetRecentBadgesResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_badge_v1_user_badge_proto_rawDescGZIP(), []int{8}
}

func (x *GetRecentBadgesResponse) GetUserBadges() []*UserBadge {
	if x != nil {
		return x.UserBadges
	}
	return nil
}

// Check badge unlock request and response (checks if user should unlock any badges)
type CheckBadgeUnlockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ActivityType  string                 `protobuf:"bytes,2,opt,name=activity_type,json=activityType,proto3" json:"activity_type,omitempty"` // e.g., "workout_completed", "streak_updated"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckBadgeUnlockRequest) Reset() {
	*x = CheckBadgeUnlockRequest{}
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckBadgeUnlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckBadgeUnlockRequest) ProtoMessage() {}

func (x *CheckBadgeUnlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckBadgeUnlockRequest.ProtoReflect.Descriptor instead.
func (*CheckBadgeUnlockRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_badge_v1_user_badge_proto_rawDescGZIP(), []int{9}
}

func (x *CheckBadgeUnlockRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CheckBadgeUnlockRequest) GetActivityType() string {
	if x != nil {
		return x.ActivityType
	}
	return ""
}

type CheckBadgeUnlockResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	NewlyUnlockedBadges []*UserBadge           `protobuf:"bytes,1,rep,name=newly_unlocked_badges,json=newlyUnlockedBadges,proto3" json:"newly_unlocked_badges,omitempty"`
	XpEarned            int32                  `protobuf:"varint,2,opt,name=xp_earned,json=xpEarned,proto3" json:"xp_earned,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CheckBadgeUnlockResponse) Reset() {
	*x = CheckBadgeUnlockResponse{}
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckBadgeUnlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckBadgeUnlockResponse) ProtoMessage() {}

func (x *CheckBadgeUnlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_badge_v1_user_badge_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckBadgeUnlockResponse.ProtoReflect.Descriptor instead.
func (*CheckBadgeUnlockResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_badge_v1_user_badge_proto_rawDescGZIP(), []int{10}
}

func (x *CheckBadgeUnlockResponse) GetNewlyUnlockedBadges() []*UserBadge {
	if x != nil {
		return x.NewlyUnlockedBadges
	}
	return nil
}

func (x *CheckBadgeUnlockResponse) GetXpEarned() int32 {
	if x != nil {
		return x.XpEarned
	}
	return 0
}

var File_proto_user_badge_v1_user_badge_proto protoreflect.FileDescriptor

const file_proto_user_badge_v1_user_badge_proto_rawDesc = "" +
	"\n" +
	"$proto/user_badge/v1/user_badge.proto\x12\x13proto.user_badge.v1\x1a\x1aproto/badge/v1/badge.proto\"\xd3\x01\n" +
	"\tUserBadge\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x05R\x06userId\x12\x19\n" +
	"\bbadge_id\x18\x03 \x01(\x05R\abadgeId\x12\x1b\n" +
	"\tearned_at\x18\x04 \x01(\tR\bearnedAt\x12\x1b\n" +
	"\tis_shared\x18\x05 \x01(\bR\bisShared\x12\x1b\n" +
	"\tshared_at\x18\x06 \x01(\tR\bsharedAt\x12+\n" +
	"\x05badge\x18\a \x01(\v2\x15.proto.badge.v1.BadgeR\x05badge\"/\n" +
	"\x14GetUserBadgesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\"y\n" +
	"\x15GetUserBadgesResponse\x12?\n" +
	"\vuser_badges\x18\x01 \x03(\v2\x1e.proto.user_badge.v1.UserBadgeR\n" +
	"userBadges\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"G\n" +
	"\x11AwardBadgeRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\x12\x19\n" +
	"\bbadge_id\x18\x02 \x01(\x05R\abadgeId\"v\n" +
	"\x12AwardBadgeResponse\x12=\n" +
	"\n" +
	"user_badge\x18\x01 \x01(\v2\x1e.proto.user_badge.v1.UserBadgeR\tuserBadge\x12!\n" +
	"\fnewly_earned\x18\x02 \x01(\bR\vnewlyEarned\"G\n" +
	"\x11ShareBadgeRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\x12\x19\n" +
	"\bbadge_id\x18\x02 \x01(\x05R\abadgeId\"K\n" +
	"\x12ShareBadgeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1b\n" +
	"\tshare_url\x18\x02 \x01(\tR\bshareUrl\"G\n" +
	"\x16GetRecentBadgesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\"Z\n" +
	"\x17GetRecentBadgesResponse\x12?\n" +
	"\vuser_badges\x18\x01 \x03(\v2\x1e.proto.user_badge.v1.UserBadgeR\n" +
	"userBadges\"W\n" +
	"\x17CheckBadgeUnlockRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\x12#\n" +
	"\ractivity_type\x18\x02 \x01(\tR\factivityType\"\x8b\x01\n" +
	"\x18CheckBadgeUnlockResponse\x12R\n" +
	"\x15newly_unlocked_badges\x18\x01 \x03(\v2\x1e.proto.user_badge.v1.UserBadgeR\x13newlyUnlockedBadges\x12\x1b\n" +
	"\txp_earned\x18\x02 \x01(\x05R\bxpEarned2\x97\x04\n" +
	"\x10UserBadgeService\x12f\n" +
	"\rGetUserBadges\x12).proto.user_badge.v1.GetUserBadgesRequest\x1a*.proto.user_badge.v1.GetUserBadgesResponse\x12]\n" +
	"\n" +
	"AwardBadge\x12&.proto.user_badge.v1.AwardBadgeRequest\x1a'.proto.user_badge.v1.AwardBadgeResponse\x12]\n" +
	"\n" +
	"ShareBadge\x12&.proto.user_badge.v1.ShareBadgeRequest\x1a'.proto.user_badge.v1.ShareBadgeResponse\x12l\n" +
	"\x0fGetRecentBadges\x12+.proto.user_badge.v1.GetRecentBadgesRequest\x1a,.proto.user_badge.v1.GetRecentBadgesResponse\x12o\n" +
	"\x10CheckBadgeUnlock\x12,.proto.user_badge.v1.CheckBadgeUnlockRequest\x1a-.proto.user_badge.v1.CheckBadgeUnlockResponseB\\ZZgithub.com/supersecretorganisation/proto-schemas/v2/gen/go/proto/user_badge/v1;userbadgepbb\x06proto3"

var (
	file_proto_user_badge_v1_user_badge_proto_rawDescOnce sync.Once
	file_proto_user_badge_v1_user_badge_proto_rawDescData []byte
)

func file_proto_user_badge_v1_user_badge_proto_rawDescGZIP() []byte {
	file_proto_user_badge_v1_user_badge_proto_rawDescOnce.Do(func() {
		file_proto_user_badge_v1_user_badge_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_user_badge_v1_user_badge_proto_rawDesc), len(file_proto_user_badge_v1_user_badge_proto_rawDesc)))
	})
	return file_proto_user_badge_v1_user_badge_proto_rawDescData
}

var file_proto_user_badge_v1_user_badge_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_user_badge_v1_user_badge_proto_goTypes = []any{
	(*UserBadge)(nil),                // 0: proto.user_badge.v1.UserBadge
	(*GetUserBadgesRequest)(nil),     // 1: proto.user_badge.v1.GetUserBadgesRequest
	(*GetUserBadgesResponse)(nil),    // 2: proto.user_badge.v1.GetUserBadgesResponse
	(*AwardBadgeRequest)(nil),        // 3: proto.user_badge.v1.AwardBadgeRequest
	(*AwardBadgeResponse)(nil),       // 4: proto.user_badge.v1.AwardBadgeResponse
	(*ShareBadgeRequest)(nil),        // 5: proto.user_badge.v1.ShareBadgeRequest
	(*ShareBadgeResponse)(nil),       // 6: proto.user_badge.v1.ShareBadgeResponse
	(*GetRecentBadgesRequest)(nil),   // 7: proto.user_badge.v1.GetRecentBadgesRequest
	(*GetRecentBadgesResponse)(nil),  // 8: proto.user_badge.v1.GetRecentBadgesResponse
	(*CheckBadgeUnlockRequest)(nil),  // 9: proto.user_badge.v1.CheckBadgeUnlockRequest
	(*CheckBadgeUnlockResponse)(nil), // 10: proto.user_badge.v1.CheckBadgeUnlockResponse
	(*v1.Badge)(nil),                 // 11: proto.badge.v1.Badge
}
var file_proto_user_badge_v1_user_badge_proto_depIdxs = []int32{
	11, // 0: proto.user_badge.v1.UserBadge.badge:type_name -> proto.badge.v1.Badge
	0,  // 1: proto.user_badge.v1.GetUserBadgesResponse.user_badges:type_name -> proto.user_badge.v1.UserBadge
	0,  // 2: proto.user_badge.v1.AwardBadgeResponse.user_badge:type_name -> proto.user_badge.v1.UserBadge
	0,  // 3: proto.user_badge.v1.GetRecentBadgesResponse.user_badges:type_name -> proto.user_badge.v1.UserBadge
	0,  // 4: proto.user_badge.v1.CheckBadgeUnlockResponse.newly_unlocked_badges:type_name -> proto.user_badge.v1.UserBadge
	1,  // 5: proto.user_badge.v1.UserBadgeService.GetUserBadges:input_type -> proto.user_badge.v1.GetUserBadgesRequest
	3,  // 6: proto.user_badge.v1.UserBadgeService.AwardBadge:input_type -> proto.user_badge.v1.AwardBadgeRequest
	5,  // 7: proto.user_badge.v1.UserBadgeService.ShareBadge:input_type -> proto.user_badge.v1.ShareBadgeRequest
	7,  // 8: proto.user_badge.v1.UserBadgeService.GetRecentBadges:input_type -> proto.user_badge.v1.GetRecentBadgesRequest
	9,  // 9: proto.user_badge.v1.UserBadgeService.CheckBadgeUnlock:input_type -> proto.user_badge.v1.CheckBadgeUnlockRequest
	2,  // 10: proto.user_badge.v1.UserBadgeService.GetUserBadges:output_type -> proto.user_badge.v1.GetUserBadgesResponse
	4,  // 11: proto.user_badge.v1.UserBadgeService.AwardBadge:output_type -> proto.user_badge.v1.AwardBadgeResponse
	6,  // 12: proto.user_badge.v1.UserBadgeService.ShareBadge:output_type -> proto.user_badge.v1.ShareBadgeResponse
	8,  // 13: proto.user_badge.v1.UserBadgeService.GetRecentBadges:output_type -> proto.user_badge.v1.GetRecentBadgesResponse
	10, // 14: proto.user_badge.v1.UserBadgeService.CheckBadgeUnlock:output_type -> proto.user_badge.v1.CheckBadgeUnlockResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_proto_user_badge_v1_user_badge_proto_init() }
func file_proto_user_badge_v1_user_badge_proto_init() {
	if File_proto_user_badge_v1_user_badge_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_user_badge_v1_user_badge_proto_rawDesc), len(file_proto_user_badge_v1_user_badge_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_user_badge_v1_user_badge_proto_goTypes,
		DependencyIndexes: file_proto_user_badge_v1_user_badge_proto_depIdxs,
		MessageInfos:      file_proto_user_badge_v1_user_badge_proto_msgTypes,
	}.Build()
	File_proto_user_badge_v1_user_badge_proto = out.File
	file_proto_user_badge_v1_user_badge_proto_goTypes = nil
	file_proto_user_badge_v1_user_badge_proto_depIdxs = nil
}
