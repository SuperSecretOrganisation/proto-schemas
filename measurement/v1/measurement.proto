syntax="proto3";

option go_package = "generated/measurement;measurementpb";

import "google/protobuf/timestamp.proto";

message Measurement {
  int32 id = 1;
  string user_id = 2;
  uint32 toe_pressure = 3;
  uint32 heel_pressure = 4;
  string activity_type = 5;
  string activity_id = 6;
  uint32 weight = 7;
  google.protobuf.Timestamp time_stamp = 8;
}

service MeasurementService {
  rpc GetMeasurement (GetMeasurementRequest) returns (GetMeasurementResponse);
  rpc ListMeasurementsForUser (ListMeasurementsForUserRequest) returns (ListMeasurementsForUserResponse);
  rpc ListAllMeasurements (ListAllMeasurementsRequest) returns (ListAllMeasurementsResponse);
  rpc CreateMeasurement (CreateMeasurementRequest) returns (CreateMeasurementResponse);
  rpc UpdateMeasurement (UpdateMeasurementRequest) returns (UpdateMeasurementResponse);
  rpc DeleteMeasurement (DeleteMeasurementRequest) returns (DeleteMeasurementResponse);
}	

// Measurement retrieval request and response

// Get a single measurement by ID
message GetMeasurementRequest {
  int32 id = 1;
}
message GetMeasurementResponse {
  Measurement measurement = 1;
}

// List measurements for a specific user
message ListMeasurementsForUserRequest {
  string user_id = 1;
  int32 page = 2;
  int32 page_size = 3;
  string sort_by = 4;
  string sort_order = 5;
}
message ListMeasurementsForUserResponse {
  repeated Measurement measurements = 1;
}

// List all measurements with pagination and sorting
message ListAllMeasurementsRequest {
  int32 page = 1;
  int32 page_size = 2;
  string sort_by = 3;
  string sort_order = 4;
}
message ListAllMeasurementsResponse {
  repeated Measurement measurements = 1;
}

// Measurement creation and update request and response
message CreateMeasurementRequest {
  Measurement measurement = 1;
}
message CreateMeasurementResponse {
  Measurement measurement = 1;
}

// Update an existing measurement
message UpdateMeasurementRequest {
  Measurement measurement = 1;
}
message UpdateMeasurementResponse {
  Measurement measurement = 1;
}

// Measurement deletion request and response
message DeleteMeasurementRequest {
  int32 id = 1;
}
message DeleteMeasurementResponse {
  bool success = 1;
}